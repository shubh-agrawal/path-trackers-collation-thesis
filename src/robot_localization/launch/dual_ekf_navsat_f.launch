<!--
     This launch file provides an example of how to work with GPS data using robot_localization. It runs three nodes:
       (1) An EKF instance that fuses odometry and IMU data and outputs an odom-frame state estimate
       (2) A second EKF instance that fuses the same data, but also fuses the transformed GPS data from (3)
       (3) An instance of navsat_transform_node, which takes in GPS data and produces pose data that has been
           transformed into your robot's world frame (here, map). The node produces a map-frame state estimate.

       The first EKF instance produces the odom->base_link transform. The second EKF produces the map->odom transform,
       but requires the odom->base_link transform from the first instance in order to do so. See the
       params/dual_ekf_navsat_example.yaml file for parameter specification.
-->

<launch>

  <node pkg="robot_localization" type="imu" name="imu_node1" clear_params="true"/>
  <node pkg="robot_localization" type="gps" name="gps1" clear_params="true"/>
  <node pkg="robot_localization" type="odom_imu_e" name="odom_imu_e" clear_params="true"/>
  <node pkg="robot_localization" type="odom_c_e" name="odom_corr1_e" clear_params="true"/>
  <node pkg="robot_localization" type="odom_imu" name="odom_imu1" clear_params="true"/>
  <node pkg="robot_localization" type="odom_c" name="odom_corr1" clear_params="true"/>

  <rosparam command="load" file="$(find robot_localization)/params/dual_ekf_navsat_f.yaml" />

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" clear_params="true"/>

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map" clear_params="true">
    <remap from="odometry/filtered" to="odometry/filtered1"/>
  </node>

  <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" clear_params="true" output="screen">
    <!-- remap from="odometry/filtered" to="odometry/filtered1"/> -->
    <remap from="/imu/data" to="/imu" />
    <remap from="/gps/fix" to="/fix_c" />
    <!-- <rosparam param="datum">[22.318275, 87.310299, 1.57 , map, base_link]</rosparam> -->
  </node>

</launch>
